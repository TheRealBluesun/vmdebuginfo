
running 3 tests
test bits::tests::test_power_of_2 ... ok
test bits::tests::test_rounddown ... ok
test bits::tests::test_roundup ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 3 tests
test test_minimal_with_a ... ok
test test_minimal_with_b ... ok
test test_minimal_with_no_args ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out


running 3 tests
test test_nop ... ok
test test_custom_syscall ... ok
test test_andi ... FAILED

failures:

---- test_andi stdout ----
thread 'test_andi' panicked at 'assertion failed: result.is_ok()', tests/test_misc.rs:16:5
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
   1: std::sys_common::backtrace::print
             at libstd/sys_common/backtrace.rs:71
             at libstd/sys_common/backtrace.rs:59
   2: std::panicking::default_hook::{{closure}}
             at libstd/panicking.rs:211
   3: std::panicking::default_hook
             at libstd/panicking.rs:221
   4: std::panicking::rust_panic_with_hook
             at libstd/panicking.rs:476
   5: std::panicking::begin_panic
             at libstd/panicking.rs:410
   6: test_misc::test_andi
             at tests/test_misc.rs:16
   7: test_misc::test_andi::{{closure}}
             at tests/test_misc.rs:10
   8: core::ops::function::FnOnce::call_once
             at libcore/ops/function.rs:238
   9: <F as alloc::boxed::FnBox<A>>::call_box
             at libtest/lib.rs:1468
             at libcore/ops/function.rs:238
             at liballoc/boxed.rs:672
  10: __rust_maybe_catch_panic
             at libpanic_unwind/lib.rs:102


failures:
    test_andi

test result: FAILED. 2 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out

